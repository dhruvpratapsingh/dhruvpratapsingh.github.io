<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-20T12:29:52-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">dps.ai</title><subtitle>Everything AI</subtitle><author><name>Dhruv Pratap Singh</name></author><entry><title type="html">Finance: Saving Your First $100K Is A Bitch</title><link href="http://localhost:4000/finance/2020/05/20/100k/" rel="alternate" type="text/html" title="Finance: Saving Your First $100K Is A Bitch" /><published>2020-05-20T00:37:00-05:00</published><updated>2020-05-20T00:37:00-05:00</updated><id>http://localhost:4000/finance/2020/05/20/100k</id><content type="html" xml:base="http://localhost:4000/finance/2020/05/20/100k/">&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../../assets/images/networth-100k.png&quot; /&gt;
&lt;/p&gt;

&lt;h1 id=&quot;inspiration&quot;&gt;Inspiration&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://amzn.to/2Tlmluf&quot;&gt;Charlie Munger&lt;/a&gt; is one of the most influential investors of our time(mostly my Dad’s time). I do not always
 agree with the his or Warren Buffet’s investment strategies but they have had great deal of influence on my life, specially on saving
  money part. Below is a quote from a book by Janet Lowe on Charlie Munger.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://amzn.to/3dXFx9o&quot;&gt;Damn Right: Behind the Scenes with Berkshire Hathaway Billionaire Charlie Munger - by Janet Lowe&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.amazon.com/gp/product/0471446912/ref=as_li_ss_il?ie=UTF8&amp;amp;linkCode=li2&amp;amp;tag=dpsai-20&amp;amp;linkId=6853f4ece24f5e62443fb2e55f569b5f&amp;amp;language=en_US&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0471446912&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=dpsai-20&amp;amp;language=en_US&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;https://ir-na.amazon-adsystem.com/e/ir?t=dpsai-20&amp;amp;language=en_US&amp;amp;l=li2&amp;amp;o=1&amp;amp;a=0471446912&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Munger has said that accumulating the first $100,000 from a standing start, with no seed money, is the most difficult part of building wealth. Making the first million was the next big hurdle. To do that a person must consistently underspend his income. Getting wealthy, he explains, is like rolling a snowball. It helps to start on top of a long hill—start early and try to roll that snowball for a very long time. It helps to live a long life.”&lt;/p&gt;

  &lt;p&gt;-  Janet Lowe&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;div class=&quot;infogram-embed&quot; data-id=&quot;_/E6LCv6WTgOM1W8n1I0Qk&quot; data-type=&quot;interactive&quot; data-title=&quot;Savings Report - Average and median account balances by income&quot;&gt;&lt;/div&gt;&lt;script&gt;!function(e,i,n,s){var t=&quot;InfogramEmbeds&quot;,d=e.getElementsByTagName(&quot;script&quot;)[0];if(window[t]&amp;&amp;window[t].initialized)window[t].process&amp;&amp;window[t].process();else if(!e.getElementById(n)){var o=e.createElement(&quot;script&quot;);o.async=1,o.id=n,o.src=&quot;https://e.infogram.com/js/dist/embed-loader-min.js&quot;,d.parentNode.insertBefore(o,d)}}(document,0,&quot;infogram-async&quot;);&lt;/script&gt;
&lt;/div&gt;

&lt;h1 id=&quot;surprise-millennials-are-saving-more-than-ever&quot;&gt;Surprise: Millennials are saving more than ever&lt;/h1&gt;
&lt;p&gt;Below are the Millennial reports from Bank of America from 2018 &amp;amp; 2020.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://bettermoneyhabits.bankofamerica.com/en/millennial-report&quot;&gt;2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../../assets/images/savings-millenials2018.png&quot; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://about.bankofamerica.com/en-us/partnering-locally/bmh-millennial-report.html#fbid=LNAXwM9NSYr&quot;&gt;2020&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../../assets/images/bmh-millennial-report-2020.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is quite impressive improvement from a generation.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;next-goal-1m&quot;&gt;Next Goal ($1M)&lt;/h1&gt;
&lt;p&gt;Just writing the capital &lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt; feels strange and exciting at the same time, but we have a goal now.&lt;/p&gt;

&lt;h3 id=&quot;what-would-it-take&quot;&gt;What would it take?&lt;/h3&gt;
&lt;p&gt;Current Age: 27
Desired Age to get to $1M: 35&lt;/p&gt;

&lt;p&gt;Let’s get to reality. We will use compound interest calculator from &lt;a href=&quot;https://www.investor.gov/financial-tools-calculators
/calculators/compound-interest-calculator&quot;&gt;investor.gov&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At my current return of 12%/Year compounded for next 9 years, I can get to the goal of $1M. Little more aggressive goal would be to get
 to that goal a year early so I can stick to my 35 age timeline. For that, I will have to work hard to increase my income sources as the
  return of 12% is already high enough.&lt;/p&gt;

&lt;p&gt;Here is the projection chart from Investor.gov.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../../assets/images/1m-projection.png&quot; /&gt;
&lt;/p&gt;

&lt;h1 id=&quot;give-back&quot;&gt;Give Back&lt;/h1&gt;
&lt;p&gt;This country and city has given me enough and it’s about time for me to start giving back. I think giving back is one of the greatest
 motivator in life. I plan to give back atleast 16 hours/month of physical service to the community and about ~0.5-1% of my net worth
  back to
  the community. I know it’s no where close to what people like Dave Ramsay suggest (10%) but seems like a good start for me. We all
   should do what we can.&lt;/p&gt;

&lt;p&gt;Thank you America for keeping this immigrant’s(officially on Non-Immigrant visa) dream alive.&lt;/p&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">Inspiration Charlie Munger is one of the most influential investors of our time(mostly my Dad’s time). I do not always agree with the his or Warren Buffet’s investment strategies but they have had great deal of influence on my life, specially on saving money part. Below is a quote from a book by Janet Lowe on Charlie Munger. Damn Right: Behind the Scenes with Berkshire Hathaway Billionaire Charlie Munger - by Janet Lowe “Munger has said that accumulating the first $100,000 from a standing start, with no seed money, is the most difficult part of building wealth. Making the first million was the next big hurdle. To do that a person must consistently underspend his income. Getting wealthy, he explains, is like rolling a snowball. It helps to start on top of a long hill—start early and try to roll that snowball for a very long time. It helps to live a long life.” - Janet Lowe Surprise: Millennials are saving more than ever Below are the Millennial reports from Bank of America from 2018 &amp;amp; 2020. 2018 2020 This is quite impressive improvement from a generation. Next Goal ($1M) Just writing the capital M feels strange and exciting at the same time, but we have a goal now. What would it take? Current Age: 27 Desired Age to get to $1M: 35 Let’s get to reality. We will use compound interest calculator from investor.gov. At my current return of 12%/Year compounded for next 9 years, I can get to the goal of $1M. Little more aggressive goal would be to get to that goal a year early so I can stick to my 35 age timeline. For that, I will have to work hard to increase my income sources as the return of 12% is already high enough. Here is the projection chart from Investor.gov. Give Back This country and city has given me enough and it’s about time for me to start giving back. I think giving back is one of the greatest motivator in life. I plan to give back atleast 16 hours/month of physical service to the community and about ~0.5-1% of my net worth back to the community. I know it’s no where close to what people like Dave Ramsay suggest (10%) but seems like a good start for me. We all should do what we can. Thank you America for keeping this immigrant’s(officially on Non-Immigrant visa) dream alive.</summary></entry><entry><title type="html">Finance: GBTC(Grayscale Bitcoin Trust): Why I added it to my Portfolio</title><link href="http://localhost:4000/finance/2020/05/04/gbtc/" rel="alternate" type="text/html" title="Finance: GBTC(Grayscale Bitcoin Trust): Why I added it to my Portfolio" /><published>2020-05-04T00:37:00-05:00</published><updated>2020-05-04T00:37:00-05:00</updated><id>http://localhost:4000/finance/2020/05/04/gbtc</id><content type="html" xml:base="http://localhost:4000/finance/2020/05/04/gbtc/">&lt;div align=&quot;center&quot;&gt;
&lt;div class=&quot;tradingview-widget-container&quot;&gt;
  &lt;div class=&quot;tradingview-widget-container__widget&quot;&gt;&lt;/div&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js&quot; async=&quot;&quot;&gt;
  {
  &quot;interval&quot;: &quot;1M&quot;,
  &quot;width&quot;: 425,
  &quot;isTransparent&quot;: false,
  &quot;height&quot;: 450,
  &quot;symbol&quot;: &quot;OTC:GBTC&quot;,
  &quot;showIntervalTabs&quot;: true,
  &quot;locale&quot;: &quot;en&quot;,
  &quot;colorTheme&quot;: &quot;light&quot;
}
  &lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;!-- TradingView Widget BEGIN --&gt;
&lt;div class=&quot;tradingview-widget-container&quot;&gt;
  &lt;div class=&quot;tradingview-widget-container__widget&quot;&gt;&lt;/div&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js&quot; async=&quot;&quot;&gt;
  {
  &quot;symbol&quot;: &quot;OTC:GBTC&quot;,
  &quot;width&quot;: 1000,
  &quot;locale&quot;: &quot;en&quot;,
  &quot;colorTheme&quot;: &quot;dark&quot;,
  &quot;isTransparent&quot;: false
}
  &lt;/script&gt;
&lt;/div&gt;
&lt;!-- TradingView Widget END --&gt;

&lt;blockquote&gt;
  &lt;p&gt;- &lt;strong&gt;Disclaimer&lt;/strong&gt;: This is not a financial advise, invest at your own risk.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;why-and-how-much-did-i-buy&quot;&gt;Why and how much did I buy?&lt;/h1&gt;
&lt;p&gt;I recently added ~1% GBTC to my portfolio’s total value.&lt;/p&gt;

&lt;p&gt;Why Digital Currency?&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Feds policies such as Infinite Quantitative Easing and Buying Junk etc during this Pandemic and stocks seem to be at all time
 high even when the jobless numbers are the worst. India did currency ban overnight. China-US continue to threaten each other with
tariffs. That said, I do not believe that Bitcoin will be used as an every day currency but will be used more for bigger transactions
, thus I like the name asset class.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Why Bitcoin?
It is the biggest asset class and most of the other digital currencies follow it’s movement. Cathy Wood in the video below goes through a
 few more reasons to elaborate more on that.&lt;/p&gt;

&lt;p&gt;Why GBTC and not pure Bitcoin?
From what understand the fund GBTC has a 2% management fee on top of that it sells on a premium of about 20%. Why would anyone still buy
 it instead of buying the Bitcoin itself? I think the fund guarantees the safety of the crypto keys and is completely compliant with OTC
  standards. GBTC is registered on OTCQX. I personally believe security of the key makes it all worth it.&lt;/p&gt;

&lt;h1 id=&quot;research-from-ark-invest&quot;&gt;Research from Ark Invest?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;- &lt;strong&gt;Podcasts &amp;amp; Papers&lt;/strong&gt;:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://research.ark-invest.com/hubfs/1_Download_Files_ARK-Invest/White_Papers/Bitcoin-Ringing-The-Bell-For-A-New-Asset-Class.pdf?hsCtaTracking=b61e33ed-207f-4a68-8c36-c30137cf54ea%7C4429a5e8-db0c-46e4-a9e9-e4d1a41fcb68&quot;&gt;Bitcoin: New Asset Class&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://research.ark-invest.com/hubfs/2_Download_Files_For_Campaigns/White_Papers/Bitcoin-Securing
-the-Network-ARK-Invest-WP.pdf?hsCtaTracking=c529d643-d3fc-4bff-91dd-3bc61b543a55%7C0a353da6-9956-4e45-b297-6a858f2df5df&quot;&gt;Bitcoin: Securing the Network&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ark-invest.com/podcast/a-history-of
-bitcoins-predecessors-dollarization-and-stablecoins-with-nic-carter/&quot;&gt;A History of Bitcoin’s Predecessors, Dollarization, and Stablecoins with Nic Carter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ark-invest.com/podcast/bitcoins-security-model-with-hasu/&quot;&gt;Bitcoin: Security Model&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And here is the lady(whom I idealize and respect, a ton) herself.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/c50TMCKsktA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;!-- TradingView Widget BEGIN --&gt;
&lt;div class=&quot;tradingview-widget-container&quot;&gt;
  &lt;div class=&quot;tradingview-widget-container__widget&quot;&gt;&lt;/div&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;https://s3.tradingview.com/external-embedding/embed-widget-financials.js&quot; async=&quot;&quot;&gt;
  {
  &quot;symbol&quot;: &quot;OTC:GBTC&quot;,
  &quot;colorTheme&quot;: &quot;light&quot;,
  &quot;isTransparent&quot;: false,
  &quot;largeChartUrl&quot;: &quot;&quot;,
  &quot;displayMode&quot;: &quot;regular&quot;,
  &quot;width&quot;: &quot;900&quot;,
  &quot;height&quot;: &quot;780&quot;,
  &quot;locale&quot;: &quot;en&quot;
}
  &lt;/script&gt;
&lt;/div&gt;
&lt;!-- TradingView Widget END --&gt;

&lt;h1 id=&quot;how-and-where-to-buy&quot;&gt;How and where to buy?&lt;/h1&gt;

&lt;p&gt;You should be able to buy GBTC through &lt;a href=&quot;https://eresearch.fidelity.com/eresearch/evaluate/snapshot.jhtml?symbols=GBTC&quot;&gt;Fidelity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you would want to directly own Bitcoin, you can do so via &lt;a href=&quot;https://cash.app/app/LWGGTPW&quot;&gt;Sqaure&lt;/a&gt; or &lt;a href=&quot;http://join.robinhood.com/dhruvs16&quot;&gt;Robinhood&lt;/a&gt;&lt;/p&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">- Disclaimer: This is not a financial advise, invest at your own risk. Why and how much did I buy? I recently added ~1% GBTC to my portfolio’s total value. Why Digital Currency? Feds policies such as Infinite Quantitative Easing and Buying Junk etc during this Pandemic and stocks seem to be at all time high even when the jobless numbers are the worst. India did currency ban overnight. China-US continue to threaten each other with tariffs. That said, I do not believe that Bitcoin will be used as an every day currency but will be used more for bigger transactions , thus I like the name asset class.</summary></entry><entry><title type="html">Finance: My Play</title><link href="http://localhost:4000/finance/2020/05/02/what-the-finance/" rel="alternate" type="text/html" title="Finance: My Play" /><published>2020-05-02T00:37:00-05:00</published><updated>2020-05-02T00:37:00-05:00</updated><id>http://localhost:4000/finance/2020/05/02/what-the-finance</id><content type="html" xml:base="http://localhost:4000/finance/2020/05/02/what-the-finance/">&lt;!-- TradingView Widget BEGIN --&gt;
&lt;div class=&quot;tradingview-widget-container&quot; align=&quot;center&quot;&gt;
  &lt;div class=&quot;tradingview-widget-container__widget&quot;&gt;&lt;/div&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js&quot; async=&quot;&quot;&gt;
  {
  &quot;symbols&quot;: [
    {
      &quot;proName&quot;: &quot;FOREXCOM:SPXUSD&quot;,
      &quot;title&quot;: &quot;S&amp;P 500&quot;
    },
    {
      &quot;proName&quot;: &quot;FOREXCOM:NSXUSD&quot;,
      &quot;title&quot;: &quot;Nasdaq 100&quot;
    },
    {
      &quot;proName&quot;: &quot;FX_IDC:EURUSD&quot;,
      &quot;title&quot;: &quot;EUR/USD&quot;
    },
    {
      &quot;proName&quot;: &quot;BITSTAMP:BTCUSD&quot;,
      &quot;title&quot;: &quot;BTC/USD&quot;
    },
    {
      &quot;proName&quot;: &quot;BITSTAMP:ETHUSD&quot;,
      &quot;title&quot;: &quot;ETH/USD&quot;
    }
  ],
  &quot;colorTheme&quot;: &quot;light&quot;,
  &quot;isTransparent&quot;: false,
  &quot;displayMode&quot;: &quot;adaptive&quot;,
  &quot;locale&quot;: &quot;en&quot;
}
  &lt;/script&gt;

&lt;/div&gt;
&lt;!-- TradingView Widget END --&gt;
&lt;p&gt;&lt;img src=&quot;https://source.unsplash.com/5gGcn2PRrtc/1600x900&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before we start:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;- &lt;strong&gt;Disclaimer&lt;/strong&gt;: This is not a financial advise, invest at your own risk.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;table-of-contents&quot;&gt;Table Of Contents:&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#managing-my-finance&quot;&gt;Managing My Finance&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#stock-portfolio-strategies&quot;&gt;Stock Portfolio Strategies&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#tax-loss-harvesting&quot;&gt;Tax Loss Harvesting&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I work in finance and after my work I spend atleast couple of hours reading about finance, It’s a passion for me and I keep learning
 something new every day. Recently, I decided to start writing about it and get thoughts from other people.&lt;/p&gt;

&lt;p&gt;For me it all started with my internship at Aon, when I was done with my internship, my boss gave me a book to read… &lt;a href=&quot;https://www.amazon.com/gp/product/B0019OVZCS/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B0019OVZCS&amp;amp;linkCode=as2&amp;amp;tag=dpsai-20&amp;amp;linkId=2152a181b1b9bed649734185c5bc8d9f&quot;&gt;Rich Dad
 , Poor Dad&lt;/a&gt;. It was about 6 years ago and in these last few years I have learned so much about how the money works.&lt;/p&gt;

&lt;p&gt;In this financial series I will talk about Retirement, Equities, AI in Finance. Don’t be surprised when quote my favs like &lt;em&gt;Chamath
  Palihapitiya&lt;/em&gt; &amp;amp; &lt;em&gt;Ray Dalio&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;managing-my-finance&quot;&gt;Managing My Finance&lt;/h2&gt;

&lt;h3 id=&quot;step-1-what-is-money-and-how-economy-works&quot;&gt;&lt;strong&gt;Step 1: What is money and how economy works?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Why the heck should we care?&lt;/p&gt;

&lt;p&gt;I think Ray Dalio can explain this 10x better than I might be able to. Here we go.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PHe0bXAIuk0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3 id=&quot;step-2-how-i-grew-up-to-care&quot;&gt;&lt;strong&gt;Step 2: How I grew up to care?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;I graduated from University of Minnesota, Twin Cities with BS in Electrical Engineering and a student loan of $105k+ at an APY of 14%(Plus
 all kinds of fees as my loan was through an Indian bank). To put that into perspective, I was paying more $15k every year just in
  interest. Luckily, I understood very well that I had to get my sh** together or our house and land that was used as
    collateral for mortgage(Yes, even the education loans need to be given with collateral) will be foreclosed by the bank.&lt;/p&gt;

&lt;p&gt;I worked hard, saved every penny until it hurts. I was driving a 1997(~20 year old when I bought it) and doing my own oil changes fixing
 the fan when by myself when it broke in dead winter and the temperature outside was -30 degrees as I did not have a house or a garage to
  do that. Lived on a $20 weekly grocery budget, shared a 2bed apartment with 2 other friends of mine(wonderful people btw). After 3.5
   years, I was able to pay the loans completely. AND I WAS PROUD, so proud that I bought a Harley Davidson V-Rod for about 15k, what a
    stupid decision, I know. But it felt good and I think it was a good lesson to understand what is a “DEPRECIATING ASSET”.&lt;/p&gt;

&lt;p&gt;My friend at work at that time introduced me to a guy named “Dave Ramsey”. I watched a couple of his videos on Youtube and totally fell
 in love with his strategy in life: Be a Banker and Not a Borrower! I think his exact quote was: “If you see me at a bank, I am there to
  buy it”. Magical, ab-so-f&lt;em&gt;**&lt;/em&gt;-lutely life changing.&lt;/p&gt;

&lt;p&gt;“Debt is Dumb”: is more of psychological approach rather than a mathematical one.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
 &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/H2Zd0-0XLBU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Fast Forward: My current investment strategies.&lt;/p&gt;

&lt;h3 id=&quot;retirement&quot;&gt;&lt;strong&gt;Retirement:&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Remember the phrase: &lt;strong&gt;“Match before Roth, Roth before Traditional”&lt;/strong&gt;
I match my work 401k match and put the remaining money into Roth IRA using Fidelity. Once the Roth IRA is maxed out, I try to max out
 my 401k(so far haven’t been able to do that, tyring none the less).&lt;/p&gt;

&lt;h3 id=&quot;individual-brokerage&quot;&gt;&lt;strong&gt;Individual Brokerage&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Apps: Fidelity, &lt;a href=&quot;http://join.robinhood.com/dhruvs16&quot;&gt;Robinhood&lt;/a&gt;, M1 Finance(not anymore).&lt;/p&gt;

&lt;h3 id=&quot;investment-strategies&quot;&gt;&lt;strong&gt;Investment Strategies:&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I am 27 Years old and can afford to be a little stupid at times.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Below strategy of mine is solely based on my trust in American Economy.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Plan A: Buy SPY, IVV, VOO&lt;/li&gt;
  &lt;li&gt;Plan B: When the Market is down about 10%: Use the Margin @ &amp;lt;= 5% APY (no more than 3 months of savings) to invest in SPY.&lt;/li&gt;
  &lt;li&gt;Plan C: If the Market is down more than 30%: I go all in with leveraged ETFs(SPXL, SOXL, UPRO, TQQQ etc…) or options. This is a very
 high
 risk
 investment, I never do this with my retirement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has worked out very well for me thus far(might change in future as the markets evolve).&lt;/p&gt;

&lt;h3 id=&quot;financial-research-platforms&quot;&gt;Financial Research Platforms&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://finance.yahoo.com/quote/SPY?p=SPY&amp;amp;.tsrc=fin-srch&quot;&gt;Yahoo Finance&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.simplysafedividends.com/features&quot;&gt;Simply Safe Dividends&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;I will go over how to use AI in building Financial Tools &amp;amp; Models in future posts. Stay connected.&lt;/p&gt;

&lt;!-- TradingView Widget BEGIN --&gt;
&lt;div class=&quot;tradingview-widget-container&quot; align=&quot;center&quot;&gt;
  &lt;div class=&quot;tradingview-widget-container__widget&quot;&gt;&lt;/div&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js&quot; async=&quot;&quot;&gt;
  {
  &quot;symbols&quot;: [
    {
      &quot;proName&quot;: &quot;FOREXCOM:SPXUSD&quot;,
      &quot;title&quot;: &quot;S&amp;P 500&quot;
    },
    {
      &quot;proName&quot;: &quot;FOREXCOM:NSXUSD&quot;,
      &quot;title&quot;: &quot;Nasdaq 100&quot;
    },
    {
      &quot;proName&quot;: &quot;FX_IDC:EURUSD&quot;,
      &quot;title&quot;: &quot;EUR/USD&quot;
    },
    {
      &quot;proName&quot;: &quot;BITSTAMP:BTCUSD&quot;,
      &quot;title&quot;: &quot;BTC/USD&quot;
    },
    {
      &quot;proName&quot;: &quot;BITSTAMP:ETHUSD&quot;,
      &quot;title&quot;: &quot;ETH/USD&quot;
    }
  ],
  &quot;colorTheme&quot;: &quot;light&quot;,
  &quot;isTransparent&quot;: false,
  &quot;displayMode&quot;: &quot;adaptive&quot;,
  &quot;locale&quot;: &quot;en&quot;
}
  &lt;/script&gt;

&lt;/div&gt;
&lt;!-- TradingView Widget END --&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">Before we start: - Disclaimer: This is not a financial advise, invest at your own risk. Table Of Contents: Introduction Managing My Finance Stock Portfolio Strategies Tax Loss Harvesting</summary></entry><entry><title type="html">Artificial Neural Networks : Employee Attrition</title><link href="http://localhost:4000/2018/12/30/dl-ann-employee-attrition/" rel="alternate" type="text/html" title="Artificial Neural Networks : Employee Attrition" /><published>2018-12-30T00:00:00-06:00</published><updated>2018-12-30T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/30/dl-ann-employee-attrition</id><content type="html" xml:base="http://localhost:4000/2018/12/30/dl-ann-employee-attrition/">&lt;p&gt;We will predict Employee Attrition using Artificial Neural Networks.&lt;/p&gt;

&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Data Preprocessing&lt;/li&gt;
  &lt;li&gt;Create ANN&lt;/li&gt;
  &lt;li&gt;Make predictions&lt;/li&gt;
  &lt;li&gt;Evaluate - Improve - Tune ANN&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;part-1-data-preprocessing&quot;&gt;Part 1: Data Preprocessing&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Import the libraries&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Get data from Github and copy that in the cache
!wget https://raw.githubusercontent.com/dhruvpratapsingh/Deep-Learning/master/SupervisedDL/ANN/employee_attrition/Employee-Attrition.csv ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you click on “Files” tab in the left panel, you should see the .csv file.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../assets/images/csv_loaded.png&quot; /&gt;
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Importing the dataset&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Employee-Attrition.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;intuition-for-cleaning-the-data&quot;&gt;Intuition for Cleaning the data&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;1. Remove a column with same value for all the rows&lt;/em&gt;
        &lt;strong&gt;StandardHours&lt;/strong&gt;
        &lt;strong&gt;Over18&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2. Remove the columns with PII(Personally identifiable information)&lt;/em&gt;
        &lt;strong&gt;EmployeeID&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3. Move y to start or the end column, to make things easier to slice (Optional)&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#removing standard hours, Over18 and employeeID + attrition as first row&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Attrition'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'Age'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'BusinessTravel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'DailyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'Department'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'DistanceFromHome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'Education'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'EducationField'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'EmployeeCount'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'EnvironmentSatisfaction'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'HourlyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'JobInvolvement'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'JobLevel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'JobRole'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'JobSatisfaction'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'MaritalStatus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'MonthlyIncome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'MonthlyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'NumCompaniesWorked'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'OverTime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'PercentSalaryHike'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'PerformanceRating'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'RelationshipSatisfaction'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'StockOptionLevel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'TotalWorkingYears'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'TrainingTimesLastYear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'WorkLifeBalance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'YearsAtCompany'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'YearsInCurrentRole'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'YearsSinceLastPromotion'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;'YearsWithCurrManager'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Remember that in python index slicing we include the start index and exclude the end index.
Use first index i.e. 0 as y (dependent variable) and 1-32 as X (independent variables)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;SOME TRICKS&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;‘print(y)’ or to see the y vector.&lt;/li&gt;
  &lt;li&gt;‘X.shape’ to see the shape of the matrix.&lt;/li&gt;
  &lt;li&gt;We use Uppercase X as it is a matrix and lowercase y as it is a vector&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;encoding-categorical-data&quot;&gt;Encoding categorical data&lt;/h3&gt;
&lt;p&gt;As the algorithms work best with numbers.&lt;/p&gt;

&lt;h4 id=&quot;set-the-display-max-columns-to-see-all-columns&quot;&gt;Set the display max columns to see all columns.&lt;/h4&gt;
&lt;p&gt;Columns that need to encoded:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Attrition y[0]&lt;/li&gt;
  &lt;li&gt;BusinessTravel X[1]&lt;/li&gt;
  &lt;li&gt;Department X[3]&lt;/li&gt;
  &lt;li&gt;EducationField X[6]&lt;/li&gt;
  &lt;li&gt;Gender X[9]&lt;/li&gt;
  &lt;li&gt;JobRole X[13]&lt;/li&gt;
  &lt;li&gt;MaritalStatus X[15]&lt;/li&gt;
  &lt;li&gt;OverTime X[19]&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'display.max_columns'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First 5 rows look something like this… rest of the columns not in the image.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../assets/images/table.png&quot; /&gt;
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Encoding categorical data&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OneHotEncoder&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_X_7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_X_7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labelencoder_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelencoder_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#no dummy trap&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;onehotencoder1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OneHotEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categorical_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onehotencoder1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;onehotencoder3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OneHotEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categorical_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onehotencoder3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;onehotencoder6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OneHotEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categorical_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onehotencoder6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;onehotencoder13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OneHotEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categorical_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onehotencoder13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;onehotencoder15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OneHotEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categorical_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onehotencoder15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;splitt-data-into-training-and-test-set&quot;&gt;Splitt data into training and test set&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Splitting the dataset into the Training set and Test set&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.model_selection&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;feature-scaling&quot;&gt;Feature Scaling&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Feature Scaling&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardScaler&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardScaler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X_train&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;part-2-create-artificial-neural-network&quot;&gt;Part 2: Create Artificial Neural Network&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Importing the Keras libraries and packages&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.layers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.layers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dropout&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.wrappers.scikit_learn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KerasClassifier&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.model_selection&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cross_val_score&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.model_selection&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GridSearchCV&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Parameters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'adam'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_ann_classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Initialising the ANN&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Adding the input layer and the first hidden layer&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_initializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'uniform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input_shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],)))&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Adding the output layer&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_initializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'uniform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sigmoid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Compiling the ANN&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'adam'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'binary_crossentropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'accuracy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KerasClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_ann_classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accuracies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cross_val_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;estimator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_jobs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accuracies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accuracies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;variance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accuracies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result of this is: We got &lt;strong&gt;92.3%&lt;/strong&gt; accuracy at best.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0.9237288095183291
0.8596697045390578
0.030821566189208408
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;tune-parameters-using-gridsearchcv-cross-validation&quot;&gt;Tune parameters using GridSearchCV (Cross Validation)&lt;/h3&gt;
&lt;p&gt;To find the best parameters we can give grid_search some values to test and it will find the best combo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_ann_classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Initialising the ANN&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Adding the input layer and the first hidden layer&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_initializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'uniform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input_shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],)))&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Adding the output layer&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_initializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'uniform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sigmoid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Compiling the ANN&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'binary_crossentropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'accuracy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KerasClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_ann_classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'batch_size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;'epochs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;'optimizer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'adam'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rmsprop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid_search&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GridSearchCV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;estimator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;n&quot;&gt;param_grid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'accuracy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid_search&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid_search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;best_parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid_search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;best_params_&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;best_accuracy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid_search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;best_score_&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Resulting best parameters:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{'batch_size': 25, 'epochs': 100, 'optimizer': 'adam'}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can find complete python code &lt;a href=&quot;https://github.com/dhruvpratapsingh/Deep-Learning/tree/master/SupervisedDL/ANN/employee_attrition&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please let me know if you have any questions or suggestions in the comments section below. Thanks.&lt;/p&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">We will predict Employee Attrition using Artificial Neural Networks. Table of Contents Data Preprocessing Create ANN Make predictions Evaluate - Improve - Tune ANN Part 1: Data Preprocessing # Import the libraries import numpy as np import matplotlib.pyplot as plt import pandas as pd # Get data from Github and copy that in the cache !wget https://raw.githubusercontent.com/dhruvpratapsingh/Deep-Learning/master/SupervisedDL/ANN/employee_attrition/Employee-Attrition.csv ./ If you click on “Files” tab in the left panel, you should see the .csv file. # Importing the dataset dataset = pd.read_csv('Employee-Attrition.csv') Intuition for Cleaning the data 1. Remove a column with same value for all the rows StandardHours Over18 2. Remove the columns with PII(Personally identifiable information) EmployeeID 3. Move y to start or the end column, to make things easier to slice (Optional) #removing standard hours, Over18 and employeeID + attrition as first row dataset = dataset[['Attrition', 'Age', 'BusinessTravel', 'DailyRate', 'Department', 'DistanceFromHome', 'Education', 'EducationField', 'EmployeeCount', 'EnvironmentSatisfaction', 'Gender', 'HourlyRate', 'JobInvolvement', 'JobLevel', 'JobRole', 'JobSatisfaction', 'MaritalStatus', 'MonthlyIncome', 'MonthlyRate', 'NumCompaniesWorked', 'OverTime', 'PercentSalaryHike', 'PerformanceRating', 'RelationshipSatisfaction', 'StockOptionLevel', 'TotalWorkingYears', 'TrainingTimesLastYear', 'WorkLifeBalance', 'YearsAtCompany', 'YearsInCurrentRole', 'YearsSinceLastPromotion', 'YearsWithCurrManager']] Remember that in python index slicing we include the start index and exclude the end index. Use first index i.e. 0 as y (dependent variable) and 1-32 as X (independent variables) X = dataset.iloc[:, 1:].values y = dataset.iloc[:, 0].values SOME TRICKS ‘print(y)’ or to see the y vector. ‘X.shape’ to see the shape of the matrix. We use Uppercase X as it is a matrix and lowercase y as it is a vector Encoding categorical data As the algorithms work best with numbers. Set the display max columns to see all columns. Columns that need to encoded: Attrition y[0] BusinessTravel X[1] Department X[3] EducationField X[6] Gender X[9] JobRole X[13] MaritalStatus X[15] OverTime X[19] pd.set_option('display.max_columns', 50) dataset.head() First 5 rows look something like this… rest of the columns not in the image.</summary></entry><entry><title type="html">Hello Deep Learning World! Using Google Drive</title><link href="http://localhost:4000/2018/12/19/deep-learning-hello-world-using-google-drive/" rel="alternate" type="text/html" title="Hello Deep Learning World! Using Google Drive" /><published>2018-12-19T00:00:00-06:00</published><updated>2018-12-19T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/19/deep-learning-hello-world-using-google-drive</id><content type="html" xml:base="http://localhost:4000/2018/12/19/deep-learning-hello-world-using-google-drive/">&lt;h3 id=&quot;1-login-to-google-drive&quot;&gt;1. Login to &lt;a href=&quot;https://drive.google.com&quot;&gt;Google Drive&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;Create a directory structure like below or of your preference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./../../../../assets/images/gd-directory.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-open-google-colaboratory&quot;&gt;2. Open Google Colaboratory.&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Colaboratory is Jupyter notebook in the form of Software As A Service provided by Google.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can select it from the options or click on “Connect more apps” if you don’t already have it as an option.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../assets/images/gd-colab.png&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./../../../../assets/images/gd-add-colab.png&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;3-mount-google-drive-to-colab-notebook&quot;&gt;3. Mount Google Drive to Colab Notebook.&lt;/h3&gt;

&lt;!-- *Copy Data File (.csv in this case) to the above Google Drive directory.*

**Mount the Google Drive** --&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;google.colab&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drive&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/content/gdrive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;You can run linux commands by prefixing the commands with an ‘!’ exclamation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# List the contents of the directory.
!ls -la /content/gdrive/My\ Drive/Deep\ Learning/Supervised\ Deep\ Learning/ANN/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-train-and-test-simple-convnet-on-the-mnist-dataset&quot;&gt;4. Train and Test simple convnet on the MNIST dataset.&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Install Keras&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!pip install -q keras
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Upload &lt;a href=&quot;https://github.com/keras-team/keras/blob/master/examples/mnist_cnn.py&quot;&gt;mnist_cnn.py&lt;/a&gt; to current folder in your Google Drive.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Run the mnist_cnn code&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!python3 /content/gdrive/My\ Drive/Deep\ Learning/Supervised\ Deep\ Learning/ANN/mnist_cnn.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is going to run for 12 epochs. This is a good example to try on Google’s free GPU (NVIDIA K80) and notice the difference between the CPU and GPU.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can run it on GPU by going clicking Runtime&amp;gt;Change runtime type&amp;gt;GPU.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And this is your Hello to Deep Learning World&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-tips-few-other-tips-on-working-with-colaboratory&quot;&gt;4. Tips (few other tips on working with Colaboratory).&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Load dataset from Google Drive&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Importing the libraries&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Importing the dataset&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/content/gdrive/My Drive/Deep Learning/Supervised Deep Learning/ANN/Churn_Modelling.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Display first 5 rows&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Download dataset from a url to Google Drive and use it&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;githubusercontent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vincentarelbundock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rdatasets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Titanic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gdrive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;My&lt;/span&gt;\ &lt;span class=&quot;n&quot;&gt;Drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Deep&lt;/span&gt;\ &lt;span class=&quot;n&quot;&gt;Learning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Supervised&lt;/span&gt;\ &lt;span class=&quot;n&quot;&gt;Deep&lt;/span&gt;\ &lt;span class=&quot;n&quot;&gt;Learning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Install libraries&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Install pytorch and import&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;download&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pytorch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cu75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cp27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cp27mu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manylinux1_x86_64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Install MxNet and import&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libnvrtc8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mxnet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cu80&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Install XGBoost and import&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xgboost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a30&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;xgboost&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thanks for being with me so far. Good luck, happy Deep Learning.&lt;/p&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">1. Login to Google Drive. Create a directory structure like below or of your preference. 2. Open Google Colaboratory. Colaboratory is Jupyter notebook in the form of Software As A Service provided by Google. You can select it from the options or click on “Connect more apps” if you don’t already have it as an option. 3. Mount Google Drive to Colab Notebook. from google.colab import drive drive.mount('/content/gdrive') You can run linux commands by prefixing the commands with an ‘!’ exclamation. # List the contents of the directory. !ls -la /content/gdrive/My\ Drive/Deep\ Learning/Supervised\ Deep\ Learning/ANN/ 4. Train and Test simple convnet on the MNIST dataset. Install Keras !pip install -q keras</summary></entry><entry><title type="html">Intro to Deep Learning</title><link href="http://localhost:4000/2018/12/17/intro-to-deep-learning/" rel="alternate" type="text/html" title="Intro to Deep Learning" /><published>2018-12-17T00:00:00-06:00</published><updated>2018-12-17T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/17/intro-to-deep-learning</id><content type="html" xml:base="http://localhost:4000/2018/12/17/intro-to-deep-learning/">&lt;p&gt;Before we start digging into the fundamentals of Deep Learning, let’s take a look at the tools we will be using going forward.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://colab.research.google.com/&quot;&gt;Google Colaboratory&lt;/a&gt; : You can run your code on GPUs hosted by Google for free.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://research.google.com/seedbank/&quot;&gt;Seedbank&lt;/a&gt; : Collection of interactive machine learning examples for Colab or Jupyter.&lt;/li&gt;
  &lt;li&gt;Create a profile on &lt;a href=&quot;https://www.kaggle.com/&quot;&gt;Kaggle&lt;/a&gt;, if are not already signed up for it.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Deep learning
|-- Supervised
|     |-- MLP:  Multilayer perceptron
|     |-- CNN:  Convolutional Neural Networks
|     |-- RNN:  Recurrent Neural Networks
|     |-- RNN:  Recursive Neural Networks
|     |-- LSTM: Long short-term memory
|     |-- SQS:  Sequence-to-sequence models
|     |-- SNN:  Shallow Neural Networks
|-- Unsupervised
      |-- SOM:  Self Organizing Maps
      |-- BM:   Boltzmann Machines
      |-- AE:   AutoEncoders
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;supervised-deep-learning&quot;&gt;Supervised Deep learning&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DL form where an output label exists for every input example. The labels are used to compare the output of Deep Neural Nets to the ground-truth values and minimize the cost function. Other forms of Deep learning are semi-supervised and Unsupervised.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Smartest and most complex thing on this planet is human brain and with deep leaning we try to mimic how human brain works by creating “Artificial Neural Networks”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;What is an ANN?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Artificial Neural Network (ANN) is&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;CNN: Convolutional Neural Networks&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;RNN: Recurrent Neural Networks&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;unsupervised-deep-learning&quot;&gt;Unsupervised Deep Learning&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;SOM: Self Organizing Maps&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BM:  Boltzmann Machines&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AE:  AutoEncoders&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;some-useful-resources&quot;&gt;&lt;strong&gt;Some useful resources&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;See in action: &lt;a href=&quot;https://playground.tensorflow.org/&quot;&gt;Tensorflow Playground&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Flashcards of the interview: &lt;a href=&quot;https://towardsdatascience.com/the-deep-learning-ai-dictionary-ade421df39e4&quot;&gt;Deep Learning Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">Before we start digging into the fundamentals of Deep Learning, let’s take a look at the tools we will be using going forward. Google Colaboratory : You can run your code on GPUs hosted by Google for free. Seedbank : Collection of interactive machine learning examples for Colab or Jupyter. Create a profile on Kaggle, if are not already signed up for it. Deep learning |-- Supervised | |-- MLP: Multilayer perceptron | |-- CNN: Convolutional Neural Networks | |-- RNN: Recurrent Neural Networks | |-- RNN: Recursive Neural Networks | |-- LSTM: Long short-term memory | |-- SQS: Sequence-to-sequence models | |-- SNN: Shallow Neural Networks |-- Unsupervised |-- SOM: Self Organizing Maps |-- BM: Boltzmann Machines |-- AE: AutoEncoders Supervised Deep learning DL form where an output label exists for every input example. The labels are used to compare the output of Deep Neural Nets to the ground-truth values and minimize the cost function. Other forms of Deep learning are semi-supervised and Unsupervised. Smartest and most complex thing on this planet is human brain and with deep leaning we try to mimic how human brain works by creating “Artificial Neural Networks”. What is an ANN? Artificial Neural Network (ANN) is CNN: Convolutional Neural Networks RNN: Recurrent Neural Networks Unsupervised Deep Learning SOM: Self Organizing Maps BM: Boltzmann Machines AE: AutoEncoders Some useful resources See in action: Tensorflow Playground Flashcards of the interview: Deep Learning Dictionary</summary></entry><entry><title type="html">Chatbots: Links &amp;amp; Resources</title><link href="http://localhost:4000/2018/12/16/chatbots-intro/" rel="alternate" type="text/html" title="Chatbots: Links &amp; Resources" /><published>2018-12-16T00:00:00-06:00</published><updated>2018-12-16T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/16/chatbots-intro</id><content type="html" xml:base="http://localhost:4000/2018/12/16/chatbots-intro/">&lt;h3 id=&quot;resources&quot;&gt;Resources:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://itsalive.io/&quot;&gt;Facebook Chatbots&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://chatfuel.com/bots/&quot;&gt;Chatfuel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wit.ai/&quot;&gt;Wit.ai&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.motion.ai/&quot;&gt;Motion.ai&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dialogflow.com/&quot;&gt;Dialogflow&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">Resources: Facebook Chatbots Chatfuel Wit.ai Motion.ai Dialogflow</summary></entry><entry><title type="html">General AI Resources</title><link href="http://localhost:4000/2018/12/16/ai-resources/" rel="alternate" type="text/html" title="General AI Resources" /><published>2018-12-16T00:00:00-06:00</published><updated>2018-12-16T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/16/ai-resources</id><content type="html" xml:base="http://localhost:4000/2018/12/16/ai-resources/">&lt;h1 id=&quot;statistics&quot;&gt;Statistics:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://seeing-theory.brown.edu/&quot;&gt;Seeing Theory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www-bcf.usc.edu/~gareth/ISL/&quot;&gt;Intro to Statistical Learning&lt;/a&gt; =&amp;gt; Must Read&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;machine-learning&quot;&gt;Machine Learning:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://nbviewer.jupyter.org/github/fonnesbeck/Bios366/blob/master/notebooks/Section6_1-Scikit-Learn.ipynb&quot;&gt;Intro to SciKit Learn : Jupyter&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;deep-learning&quot;&gt;Deep Learning:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/the-deep-learning-ai-dictionary-ade421df39e4&quot;&gt;Deep Learning dictionary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;books&quot;&gt;Books&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://columbia-applied-data-science.github.io/appdatasci.pdf&quot;&gt;Applied Data Science by Ian Langmore &amp;amp; Daniel Krasner&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;datasets&quot;&gt;Datasets&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ics.uci.edu/ml/datasets.html&quot;&gt;UCI Machine Learning Datasets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/datasets&quot;&gt;Kaggle Datasets&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;python-libraries&quot;&gt;Python Libraries&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://heartbeat.fritz.ai/introduction-to-matplotlib-data-visualization-in-python-d9143287ae39&quot;&gt;Matplotlib&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;data-engineering&quot;&gt;Data Engineering&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mmds.org/&quot;&gt;Mining Massive Datasets&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;pioneers&quot;&gt;Pioneers&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://info.usherbrooke.ca/hlarochelle/neural_networks/content.html&quot;&gt;Hugo Larochelle&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">Statistics: Seeing Theory Intro to Statistical Learning =&amp;gt; Must Read Machine Learning: Intro to SciKit Learn : Jupyter Deep Learning: Deep Learning dictionary Books Applied Data Science by Ian Langmore &amp;amp; Daniel Krasner Datasets UCI Machine Learning Datasets Kaggle Datasets Python Libraries Matplotlib Data Engineering Mining Massive Datasets Pioneers Hugo Larochelle</summary></entry><entry><title type="html">Getting Started: Create Your Data Scientist Profile Using Github Pages</title><link href="http://localhost:4000/2018/12/14/create-github-pages-profile/" rel="alternate" type="text/html" title="Getting Started: Create Your Data Scientist Profile Using Github Pages" /><published>2018-12-14T00:00:00-06:00</published><updated>2018-12-14T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/14/create-github-pages-profile</id><content type="html" xml:base="http://localhost:4000/2018/12/14/create-github-pages-profile/">&lt;p&gt;&lt;img src=&quot;https://source.unsplash.com/OVbeSXRk_9E/1200x600&quot; alt=&quot;GitHub Pages&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary:&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Register a domain name.&lt;/li&gt;
  &lt;li&gt;Register for a Github account and configure Github pages.&lt;/li&gt;
  &lt;li&gt;Choose a Jekyll Theme and Setup your environment.&lt;/li&gt;
  &lt;li&gt;Setup Github Pages.&lt;/li&gt;
  &lt;li&gt;Add your Custom domain to Github Pages.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-register-a-your-domain-name-optional&quot;&gt;1. Register a your domain name. (Optional)&lt;/h2&gt;

&lt;p&gt;I like &lt;a href=&quot;https://www.namecheap.com/&quot; target=&quot;_blank&quot;&gt;Namecheap&lt;/a&gt;
 for domain registration, they also offer FREE domain registrations for students. Check out https://nc.me/ to register your own domain name. If you are not a student you can still register for one with a small charge. You can also look at &lt;a href=&quot;https://www.godaddy.com/&quot; target=&quot;_blank&quot;&gt;Godaddy&lt;/a&gt;, &lt;a href=&quot;https://www.ionos.com/&quot; target=&quot;_blank&quot;&gt;1&amp;amp;1&lt;/a&gt; etc…&lt;/p&gt;

&lt;p&gt;Once you have a domain name registered jump on to the next section.&lt;/p&gt;

&lt;h2 id=&quot;2-register-for-a-github-account&quot;&gt;2. Register for a Github account.&lt;/h2&gt;

&lt;p&gt;Navigate to &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt; and signup if you already don’t have an account. Once you are logged in, click “+” icon on the upper right corner and select “New Repository” option from the dropdown. Repository name should be “username.github.io” , username is your Github username. Proceed by clicking on “Create repository” button.&lt;/p&gt;

&lt;h2 id=&quot;3-setup-jekyll-environment-and-deploy-it-to-github-pages&quot;&gt;3. Setup Jekyll environment and deploy it to Github Pages.&lt;/h2&gt;

&lt;p&gt;This is a good and complete article to install, build and deploy your jekyll site on github.
&lt;a href=&quot;https://www.taniarascia.com/make-a-static-website-with-jekyll/&quot; target=&quot;_blank&quot;&gt;Make a static website by Tania Rascia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the step below from Github for more info.
https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;# =&amp;gt; Now browse to http://localhost:4000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;bonus-resources&quot;&gt;&lt;strong&gt;Bonus Resources&lt;/strong&gt;:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllthemes.io/free&quot; target=&quot;_blank&quot;&gt;Free Jekyll Themes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/git-and-github-learning-resources/&quot; target=&quot;_blank&quot;&gt;Git and Github learning resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=T1itpPvFWHI&amp;amp;list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB&quot; target=&quot;_blank&quot;&gt;Jekyll Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Dhruv Pratap Singh</name></author><summary type="html">Summary: Register a domain name. Register for a Github account and configure Github pages. Choose a Jekyll Theme and Setup your environment. Setup Github Pages. Add your Custom domain to Github Pages. 1. Register a your domain name. (Optional) I like Namecheap for domain registration, they also offer FREE domain registrations for students. Check out https://nc.me/ to register your own domain name. If you are not a student you can still register for one with a small charge. You can also look at Godaddy, 1&amp;amp;1 etc… Once you have a domain name registered jump on to the next section.</summary></entry></feed>